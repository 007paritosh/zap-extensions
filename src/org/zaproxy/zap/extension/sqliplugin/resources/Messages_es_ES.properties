#X-Generator: crowdin.com

sqliplugin.ext.name=Inyecci\u00f3n SQL avanzada
sqliplugin.ext.desc=Extensi\u00f3n de ayuda para esc\u00e1ner avanzado de inyecci\u00f3n SQL.

sqliplugin.scanner.name=Inyecci\u00f3n SQL avanzada
sqliplugin.scanner.alert.name=Inyecci\u00f3n SQL avanzada - {0}
sqliplugin.scanner.alert.desc=Una inyecci\u00f3n SQL puede ser posible utilizando el payload adjunto
sqliplugin.scanner.alert.soln=Do not trust client side input, even if there is client side validation in place.\n\nIn general, type check all data on the server side.\n\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\n\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\n\nIf database Stored Procedures can be used, use them.\n\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\n\nDo not create dynamic SQL queries using simple string concatenation.\n\nEscape all data received from the client.\n\nApply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.\n\nApply the privilege of least privilege by using the least privileged database user possible.\n\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\n\nGrant the minimum database access that is necessary for the application.
sqliplugin.scanner.alert.info.unionbased=RDBMS [{0}] likely, given UNION-specific error message fragment for [{1}] columns\n\nThe vulnerability was detected by manipulating the parameter with an SQL ''UNION'' clause to cause a database error message to be returned and recognised.
sqliplugin.scanner.alert.info.booleanbased=Los resultados de la p\u00e1gina fueron manipulados con \u00e9xito usando las condiciones booleanas [{0}] y [{1}] \n\nEl valor del par\u00e1metro ha sido modificado fue extra\u00eddo del HTML de salida con el prop\u00f3sito de ser comparado. \n\nSe devuelven los datos al par\u00e1metro original. \n\nLa vulnerabilidad fue detectada al realizar con \u00e9xito al restringir con \u00e9xito los datos originalmente devueltos, manipulando el par\u00e1metro.
sqliplugin.scanner.alert.info.errorbased=RDBMS [{0}] likely, given error message fragment [{1}] in HTML results.\n\nThe vulnerability was detected by manipulating the parameter to cause a database error message to be returned and recognised.
sqliplugin.scanner.alert.info.timebased=El tiempo de consulta es controlable a trav\u00e9s del valor del par\u00e1metro [{0}], el cual caus\u00f3 que la solicitud necesitase [{1}] mili segundos, mientras que la consulta original, no modificada, necesit\u00f3 [{2}] [{3}] mili segundos.
sqliplugin.scanner.alert.refs=https\://www.OWASP.org/index.php/Top_10_2010-a1 https\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
